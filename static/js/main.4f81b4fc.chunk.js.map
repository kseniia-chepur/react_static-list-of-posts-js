{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","className","href","email","name","CommentInfo","comment","body","CommentList","comments","map","id","PostInfo","post","title","length","PostList","posts","App","postsFromServer","userId","usersFromServer","find","commentsFromServer","filter","postId","ReactDOM","render","document","getElementById"],"mappings":"m08IAEaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,8BACG,eACD,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKG,OAA7C,SACGH,EAAKI,WCNCC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKL,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCK,EAAQF,OAE/C,wCAEA,mBACEH,UAAU,qBACVC,KAAI,iBAAYI,EAAQH,OAF1B,SAIGG,EAAQH,WAIb,qBAAKF,UAAU,oBAAf,SACGK,EAAQC,WCbFC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKR,UAAU,cAAf,SAEGQ,EAASC,KAAI,SAAAJ,GAAO,OACnB,cAAC,EAAD,CACEA,QAASA,GACJA,EAAQK,WCLRC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKZ,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCY,EAAKC,QACrCD,EAAKb,MAEJ,cAAC,EAAD,CACEA,KAAMa,EAAKb,UAKjB,mBAAGC,UAAU,iBAAb,SACGY,EAAKN,OAGR,uBAECM,EAAKJ,SAASM,OAEX,cAAC,EAAD,CACEN,SAAUI,EAAKJ,WAGhB,mBAAG,UAAQ,oBAAX,iCC1BIO,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKhB,UAAU,WAAf,SAEGgB,EAAMP,KAAI,SAAAG,GAAI,OACb,cAAC,EAAD,CACEA,KAAMA,GACDA,EAAKF,U,qBCFLO,EAAM,WAWjB,IAAMD,EAAQE,EACXT,KAAI,SAAAG,GAAI,kCACJA,GADI,IAEPb,MAbiBoB,EAaCP,EAAKO,OAZlBC,EACJC,MAAK,SAAAtB,GAAI,OAAIA,EAAKW,KAAOS,MAAW,MAYrCX,UATqBE,EASKE,EAAKF,GAR1BY,EACJC,QAAO,SAAAlB,GAAO,OAAIA,EAAQmB,SAAWd,MAAO,QAFjD,IAAyBA,EALJS,KAiBrB,OACE,0BAASnB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CACEgB,MAAOA,QCxBfS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4f81b4fc.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <p>\n    {' Posted by  '}\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  </p>\n);\n","export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{comment.name}</strong>\n\n      <span>{` by `}</span>\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n\n    {comments.map(comment => (\n      <CommentInfo\n        comment={comment}\n        key={comment.id}\n      />\n    ))\n    }\n  </div>\n);\n","import './PostInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{post.title}</h3>\n      {post.user\n        && (\n        <UserInfo\n          user={post.user}\n        />\n        )}\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n\n    <hr />\n\n    {post.comments.length\n      ? (\n        <CommentList\n          comments={post.comments}\n        />\n      )\n      : (<b data-cy=\"NoCommentsMessage\">No comments yet</b>)\n    }\n\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n\n    {posts.map(post => (\n      <PostInfo\n        post={post}\n        key={post.id}\n      />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nexport const App = () => {\n  function getUserById(userId) {\n    return usersFromServer\n      .find(user => user.id === userId) || null;\n  }\n\n  function getCommentsById(id) {\n    return commentsFromServer\n      .filter(comment => comment.postId === id) || null;\n  }\n\n  const posts = postsFromServer\n    .map(post => ({\n      ...post,\n      user: getUserById(post.userId),\n      comments: getCommentsById(post.id),\n    }));\n\n  return (\n    <section className=\"App\">\n      <h1 className=\"App__title\">Static list of posts</h1>\n      <PostList\n        posts={posts}\n      />\n    </section>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}